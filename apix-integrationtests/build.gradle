plugins {
    id 'base'
    id 'eu.xenit.de' version '2.0.5' apply false
    id 'eu.xenit.alfresco' version '1.0.0' apply false
    id 'eu.xenit.alfresco-remote-testrunner' version '2.0.0-rc.4' apply false
}

// Give IntelliJ a default source of non-shared classes
ext {
    alfresco_version = alfresco_62_version
    alfresco_repo_version = '7.199.0'
    alfresco_dm_version = alfresco_62_dm_version
    alfresco_remote_api_version = '7.107.1'
    alfresco_min_version = '6.2'
    subproject_alfresco_version = 62
}

subprojects {
    apply from: "${project.projectDir}/overrides.gradle"
    apply plugin: 'eu.xenit.de'
    apply plugin: 'eu.xenit.alfresco-remote-testrunner'
    apply plugin: 'eu.xenit.alfresco'

    sourceSets {
        main {
            java {
                srcDirs = []
            }
            resources {
                srcDirs = []
            }
        }
        integrationTest {
            java {
                srcDirs = ['../src/main/java', './src/main/java']
            }
            resources {
                srcDirs = ['../src/main/resources', './src/main/resources']
            }
        }
    }

    def projectDocker = project(":apix-docker:docker-${subproject_alfresco_version}")
    def composeUpTask = projectDocker.tasks.getByName("composeUp")
    def composeDownTask = projectDocker.tasks.getByName("composeDown")

    alfrescoIntegrationTest {
        integrationTestPackages = ["eu.xenit.apix"]
    }

    alfrescoDynamicExtensions {
        repository {
            endpoint {
                protocol = "http"
                serviceUrl = "/alfresco/service"
            }
            authentication {
                username = "admin"
                password = "admin"
            }
        }
    }

//    integrationTest.dependsOn composeUpTask
//    integrationTest.finalizedBy composeDownTask

    installBundle.enabled = false

    installIntegrationTestingBundle {
        dependsOn composeUpTask
        doFirst {
//            files = tasks.jar.archivePath
            def serviceInfo = composeUpTask.servicesInfos.get("alfresco-core")
            def host = 'localhost'
            def port = '8080'
            if(serviceInfo != null) {
                port = serviceInfo.ports[8080]
                host = serviceInfo.getHost()
            }
            alfrescoDynamicExtensions.repository.endpoint.port = port
            alfrescoDynamicExtensions.repository.endpoint.host = host
        }
    }
//    integrationTest.finalizedBy composeDownTask


    installBundle {
        dependsOn jar
        doFirst {
//            files = tasks.jar.archivePath
            def serviceInfo = composeUpTask.servicesInfos.get("alfresco-core")
            def host = 'localhost'
            def port = '8080'
            if(serviceInfo != null) {
                port = serviceInfo.ports[8080]
                host = serviceInfo.getHost()
            }
            alfrescoDynamicExtensions.repository.endpoint.port = port
            alfrescoDynamicExtensions.repository.endpoint.host = host
        }
//        doLast {
//            println tasks.jar.archivePath
//        }
    }

    dependencies {
        alfrescoProvided project(":apix-rest-v1")
        alfrescoProvided project(":apix-interface")
        alfrescoProvided project(":apix-impl:apix-impl-${subproject_alfresco_version}")

        alfrescoProvided group: 'org.alfresco', name: 'alfresco-repository', version: alfresco_repo_version
        alfrescoProvided group: 'org.alfresco', name: 'alfresco-remote-api', version: alfresco_remote_api_version
        alfrescoProvided group: 'org.alfresco', name: 'alfresco-data-model', version: alfresco_dm_version
        alfrescoProvided group: 'org.osgi', name: 'org.osgi.core', version: '4.3.1'

        integrationTestImplementationRemote group: 'org.apache.httpcomponents', name: 'fluent-hc', version: http_version
        integrationTestImplementationRemote group: 'org.apache.httpcomponents', name: 'httpclient', version: http_version
        integrationTestImplementationRemote group: 'org.apache.httpcomponents', name: 'httpcore', version: http_core_version
        integrationTestImplementationRemote group: 'org.apache.httpcomponents', name: 'httpmime', version: http_version
        integrationTestImplementationRemote group: 'commons-codec', name: 'commons-codec', version: '1.10'
        integrationTestImplementationRemote group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
        integrationTestImplementationRemote group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version
        integrationTestImplementationRemote group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jackson_version
        integrationTestImplementationRemote group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version
        integrationTestImplementationRemote group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jackson_version
        integrationTestImplementationRemote group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: jackson_version
    }
}

