def integrationTestsProjectDir = project.projectDir
allprojects {
    // Subproject of supported Alfresco versions
    def subproject_alfresco_version = project.projectDir.name == "alfresco"
            ? "70" // minimum supported version
            : project.projectDir.name

    // Following needs to apply to shared (./src) project and version-specific (e.g. ./70) projects.
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'eu.xenit.de'
    apply plugin: 'eu.xenit.alfresco-remote-testrunner'
    apply plugin: 'eu.xenit.alfresco'
    apply from: "${rootProject.projectDir}/alfresco/${subproject_alfresco_version}/overrides.gradle"

    sourceSets {
        main.java.srcDirs = []
        main.resources.srcDirs = []
        integrationTest.java.srcDirs = ["${integrationTestsProjectDir}/src/main/java"]
        integrationTest.resources.srcDirs = ["${integrationTestsProjectDir}/src/main/resources"]
    }

    configurations {
        implementation {
            // Fixes IDE source highlighting
            extendsFrom integrationTestImplementation
        }
        testImplementation {
            extendsFrom integrationTestImplementation
        }
        integrationTestImplementationLocal {
            // Removes weird dependency lodged inside the remote testing tools
            // https://github.com/xenit-eu/alfresco-remote-testrunner/blob/564df30f25dab78f6a7aad02f3ba01fcf9a38b13/alfresco-remote-testrunner-gradle-plugin/src/main/java/eu/xenit/testing/integrationtesting/gradle/internal/IntegrationTestConfigurations.java#L84
            exclude(group: 'commons-lang', module: 'commons-lang')
        }
    }
    println("project_alfresco_version.contains(\"7\") - ${subproject_alfresco_version}")

    dependencies {
        if(subproject_alfresco_version.contains("7")){
            alfrescoProvided(project(":apix-rest:alfresco-7.x")) { transitive = false }
            // Below is a temporary fix to circumvent using commons-lang 1.0.0 JAR. This jar
            //  - is injected by alfresco-remote-testrunner
            //  - is not on Maven Central (only 1.0) is
            //  - nobody what it used for exactly
            //  - nobody knows where it came from
            // Ergo, kill it with fire.
            // The proper way is a fix of alfresco-remote-testrunner, but until then we use this workaround.
            integrationTestImplementationLocal "commons-lang:commons-lang:1.0"
//            testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.25.1'
        }
        else{
            alfrescoProvided(project(":apix-rest:alfresco-2x")) { transitive = false }
//            integrationTestImplementationLocal "commons-lang:commons-lang:1.0"//?
            integrationTestImplementationLocal "org.apache.commons:commons-lang3:3.14.0"
            testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.0.0'
        }
        alfrescoProvided(project(":apix-interface")) { transitive = false }

        // Add services used to the integration test fatjar, since we can't access the ones deployed in Alfresco
        integrationTestImplementationRemote (project(":apix-impl:apix-impl-${subproject_alfresco_version}")) {
            // Already includes apix-interface, we need to exclude it to avoid Linkage errors from
            // having 2 of the same classes on the classpath
            // (1 in Alfresco from apix-impl AMP + 1 in DE from the integration tests fat jar)
            exclude(group: "eu.xenit.alfred.api", module: "apix-interface")
        }

        integrationTestImplementationRemote("org.apache.httpcomponents:fluent-hc:${http_version}") {
            exclude group: 'commons-logging'
            exclude group: 'org.apache.httpcomponents', module: 'httpcore'
        }

        alfrescoProvided platform("org.alfresco:acs-community-packaging:${alfresco_version}")
        alfrescoProvided("org.alfresco:alfresco-repository")
        alfrescoProvided('org.alfresco:alfresco-remote-api')
        alfrescoProvided('org.alfresco:alfresco-data-model')
        alfrescoProvided group: 'org.osgi', name: 'org.osgi.core', version: '4.3.1'

        testImplementation project.sourceSets.integrationTest.output
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.25.1'
    }
}

subprojects {
    // Subproject of supported Alfresco versions
    def projectApixImpl = project(":apix-impl:apix-impl-${project.projectDir.name}")
    def projectDocker = project(":apix-docker:docker-${project.projectDir.name}")
    evaluationDependsOn(projectApixImpl.path)
    evaluationDependsOn(projectDocker.path)
    def assembleTask = projectApixImpl.tasks.getByName("assemble")
    def composeUpTask = projectDocker.tasks.getByName("composeUp")
    def composeDownTask = projectDocker.tasks.getByName("composeDown")

    alfrescoIntegrationTest {
        integrationTestPackages = ["eu.xenit.apix"]
    }

    alfrescoDynamicExtensions {
        repository {
            endpoint {
                protocol = project.hasProperty('protocol') ? project.protocol : 'http'
                host = project.hasProperty('host') ? project.host : 'localhost'
                port = project.hasProperty('port') ? project.port : 8080
            }
        }
    }

    jar.enabled = false // empty jar
    installBundle.enabled = false  // no need to install an empty jar

    installIntegrationTestingBundle {
        dependsOn assembleTask
        dependsOn composeUpTask
        doFirst {
            def serviceInfo = composeUpTask.servicesInfos.get("alfresco-core")
            if (serviceInfo != null) {
                alfrescoDynamicExtensions {
                    repository {
                        endpoint {
                            host = serviceInfo.getHost()
                            port = serviceInfo.ports[8080]
                        }
                    }
                }
            }
        }
    }

    integrationTest {
        // After the tests, the docker setup should be stopped
        finalizedBy composeDownTask
    }

    // Fix to let BND deal with multi-releases JARs
    // So far this only applies to snakeyaml
    integrationTestFatJar {
        bnd('-fixupmessages': '^Classes found in the wrong directory: \\\\{META-INF/versions/.*')
    }
}

