plugins {
    // Centralize plugin version management
    id 'be.vbgn.ci-detect' version '0.5.0' apply false
    id 'eu.xenit.de' version '3.1.0' apply false
    id 'eu.xenit.amp' version '1.1.0' apply false
    id 'eu.xenit.alfresco' version '1.1.0' apply false
    id 'eu.xenit.docker-alfresco' version '5.3.1' apply false
    id 'eu.xenit.docker-compose' version '5.3.1' apply false
    id 'eu.xenit.alfresco-remote-testrunner' version '2.0.1' apply false
}

def static getVersionQualifier(String branch_name) {
    if(branch_name.startsWith('release'))
        return ''
    return '-SNAPSHOT'
}

ext {
    versionWithoutQualifier = '5.0.1'

    de_version = '3.1.0' // Only used for integration testing
    mvc = '8.0.0' // TODO TBD, breaking change in gh now, zlatin https://github.com/dgradecak/alfresco-mvc/pull/28  , use overload.gradle in subproject to override this version
    jackson_version = '2.8.3' // 2.17.1 Upgraded, TODO pray for no breaking changes.
    care4alfVersion = '2.3.0'
    http_version = '4.3.4' // Used by integration tests
}

subprojects {
    apply plugin: 'java'
// subproject voor 7.x als JDK 11 override
    group = 'eu.xenit.alfred.api'
    version = versionWithoutQualifier + getVersionQualifier(System.env.BRANCH_NAME ?: 'local')
    // todo for 23.1 23.2 it is 17!
//    sourceCompatibility = 17
//    targetCompatibility = 17
    sourceCompatibility = 11
    targetCompatibility = 11
    repositories {
        mavenCentral()
        maven { url "https://artifacts.alfresco.com/nexus/content/groups/public" }
        // This private repository provides Xenit with Alfresco enterprise artefacts.
        // External developers should replace it with their own library repository.
        maven {
            url 'https://artifacts.alfresco.com/nexus/content/groups/private'
            credentials {
                username System.env.ALFRESCO_NEXUS_USERNAME ?: property("org.alfresco.maven.nexus.username")
                password System.env.ALFRESCO_NEXUS_PASSWORD ?: property("org.alfresco.maven.nexus.password")
            }
        }
    }
}

def getSecondDotPosition(String version) {
    return version.split(/\./)[0].length() + 1 + version.split(/\./)[1].length()
}