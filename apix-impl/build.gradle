sourceSets.main.java.srcDirs += 'src/main/java'
subprojects {
    def shortAlfrescoVersion = project.name.split("-")[2]
    apply from: "${rootProject.projectDir}/alfresco/${shortAlfrescoVersion}/overrides.gradle"
    apply plugin: 'java-library'

    dependencies {
        api(project(":apix-impl"))
    }

    sourceSets {
        main {
            java {
                srcDirs = ["${project.parent.projectDir}/src/main/java"]
            }
        }
        test {
            java {
                srcDirs = ["${project.parent.projectDir}/src/test/java"]
            }
            testResultsDirName = "${project.parent.buildDir}/test-results/test"
        }
    }
}

allprojects {
    // Subproject of supported Alfresco version 62/70/71/72/73
    def subproject_alfresco_version = project.projectDir.name == "apix-impl"
            ? "70" : project.projectDir.name
    apply from: "$rootProject.projectDir/alfresco/${subproject_alfresco_version}/overrides.gradle"
    // allprojects also applies to shared code (under apix-impl/src) that needs to work in IntelliJ
    apply plugin: 'eu.xenit.alfresco'
    apply plugin: 'java-library'

    dependencies {
        api(project(":apix-interface")) {
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
            exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        }
        implementation 'commons-lang:commons-lang:1.0'

        alfrescoProvided platform("org.alfresco:acs-community-packaging:${alfresco_version}")
        alfrescoProvided("org.alfresco:alfresco-repository")
        alfrescoProvided('org.alfresco:alfresco-remote-api')

        implementation group: 'org.yaml', name: 'snakeyaml', version: '1.15'
        implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

        testImplementation platform("org.alfresco:acs-community-packaging:${alfresco_version}")
        testImplementation 'org.alfresco:alfresco-repository'
        testImplementation 'org.alfresco:alfresco-remote-api'
        testImplementation 'org.alfresco:alfresco-data-model'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.25.1'
    }

    task generateVersionFile(type: Task) {
        def versionFile = "${rootDir}/apix-impl/src/main/java/eu/xenit/apix/Version.java"
        outputs.file versionFile
        doFirst {
            file(versionFile).text = """package eu.xenit.apix;
/*
 * WARNING: THIS FILE IS AUTO-GENERATED BY GRADLE DURING BUILD. 
 * ANY CHANGES TO THIS FILE WILL BE LOST AFTER NEW BUILD.
 * SEE Gradle task generateVersionFile
 */
public class Version {
	public static final String Number = "${project.versionWithoutQualifier}";
}
"""
        }
    }
    compileJava.dependsOn generateVersionFile

    test {
        // Always run unit tests
        outputs.upToDateWhen { false }

        // Show test results when running from the CLI
        testLogging { events "PASSED", "FAILED", "SKIPPED" }
    }
}
