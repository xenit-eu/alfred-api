apply plugin: 'java-library'
dependencies {
    api project(":apix-interface")
}
subprojects {
    def shortAlfrescoVersion = project.name.split("-")[2]
    apply from: "${rootProject.projectDir}/alfresco/${shortAlfrescoVersion}/overrides.gradle"
    apply plugin: 'java-library'

    dependencies {
        api(project(":apix-impl"))
        if (shortAlfrescoVersion.toInteger() < 75 ){
            implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
        } else{
            implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'
//            implementation group: 'org.springframework', name: 'spring-core', version: '6.0.14'
//            implementation 'org.springframework:spring-core:6.0.14'
//            implementation 'org.springframework:spring-orm:6.0.14'
//            implementation 'org.springframework:spring-context-support:6.0.14'
//            implementation 'org.springframework:spring-context:6.0.14'
//            implementation 'org.springframework:spring-web:6.0.14'
//            implementation 'org.springframework.security:spring-security-crypto:6.1.4'
//            implementation 'org.springframework.security:spring-security-oauth2-client:6.1.4'
//            implementation 'org.springframework.security:spring-security-oauth2-jose:6.1.4'
//            implementation 'org.springframework.security:spring-security-oauth2-resource-server:6.1.4'
//            implementation('')             'org.springframework:spring-beans:4.3.20.RELEASE'
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ["${project.parent.projectDir}/src/main/java"]
            }
        }
        test {
            java {
                srcDirs = ["${project.parent.projectDir}/src/test/java"]
            }
            testResultsDirName = "${project.parent.buildDir}/test-results/test"
        }
    }

//    task generateVersionFile(type: Task) {
//        def versionFile = "${rootDir}/apix-impl/src/main/java/eu/xenit/apix/Version.java"
//        outputs.file versionFile
//        doFirst {
//            file(versionFile).text = """package eu.xenit.apix;
///*
// * WARNING: THIS FILE IS AUTO-GENERATED BY GRADLE DURING BUILD.
// * ANY CHANGES TO THIS FILE WILL BE LOST AFTER NEW BUILD.
// * SEE Gradle task generateVersionFile
// */
//public class Version {
//	public static final String Number = "${project.versionWithoutQualifier}";
//}
//"""
//        }
//    }
//    compileJava.dependsOn generateVersionFile
}

allprojects {
    // Subproject of supported Alfresco versions
    def subproject_alfresco_version = project.projectDir.name == "apix-impl"
            ? "70" : project.projectDir.name
    apply from: "$rootProject.projectDir/alfresco/${subproject_alfresco_version}/overrides.gradle"
    // allprojects also applies to shared code (under apix-impl/src) that needs to work in IntelliJ
    apply plugin: 'eu.xenit.alfresco'
    apply plugin: 'java-library'

    dependencies {
        alfrescoProvided platform("org.alfresco:acs-community-packaging:${alfresco_version}")
        alfrescoProvided "org.alfresco:alfresco-repository"
        alfrescoProvided 'org.alfresco:alfresco-remote-api'
        alfrescoProvided 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

        testImplementation platform("org.alfresco:acs-community-packaging:${alfresco_version}")
        testImplementation 'org.alfresco:alfresco-repository'
        testImplementation 'org.alfresco:alfresco-remote-api'
        testImplementation 'org.alfresco:alfresco-data-model'
        testImplementation 'org.mockito:mockito-core'
    }


    test {
        // Always run unit tests
        outputs.upToDateWhen { false }

        // Show test results when running from the CLI
        testLogging { events "PASSED", "FAILED", "SKIPPED" }
    }
}

//task generateVersionFile(type: Task) {
//    def versionFile = "${rootDir}/apix-impl/src/main/java/eu/xenit/apix/Version.java"
//    outputs.file versionFile
//    doFirst {
//        file(versionFile).text = """package eu.xenit.apix;
///*
// * WARNING: THIS FILE IS AUTO-GENERATED BY GRADLE DURING BUILD.
// * ANY CHANGES TO THIS FILE WILL BE LOST AFTER NEW BUILD.
// * SEE Gradle task generateVersionFile
// */
//public class Version {
//	public static final String Number = "${project.versionWithoutQualifier}";
//}
//"""
//    }
//}

